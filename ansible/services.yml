---
- name: Stop & disable unwanted services (Debian)
  become: yes
  when: ansible_distribution == "Debian" or ansible_distribution == "Kali GNU/Linux"
  ignore_errors: yes
  service:
    name: "{{ item }}"
    state: stopped
    enabled: no
  with_items: "{{ debian_services }}"
- name: Stop unwanted services (Slackware)
  become: yes
  when: ansible_distribution == "Slackware"
  ignore_errors: yes
  command: /bin/sh /etc/rc.d/rc.{{ item }} stop
  with_items: "{{ slackware_services }}"
- name: Disable unwanted services (Slackware)
  become: yes
  when: ansible_distribution == "Slackware"
  ignore_errors: yes
  file:
    path: "/etc/rc.d/rc.{{ item }}"
    owner: root
    group: root
    mode: ugo-x
  with_items: "{{ slackware_services }}"
- name: Restrict cron (cron.allow)
  when: ansible_distribution == "Debian" or ansible_distribution == "Kali GNU/Linux"
  become: yes
  file:
    path: /etc/cron.allow
    state: touch
    owner: root
    group: crontab
    mode: '0640'
- name: Restrict cron (cron.deny)
  when: ansible_distribution == "Debian" or ansible_distribution == "Kali GNU/Linux"
  become: yes
  file:
    path: /etc/cron.deny
    state: absent
- name: Restrict cron (Slackware)
  when: ansible_distribution == "Slackware"
  become: yes
  file:
    path: /usr/bin/crontab
    group: wheel
    mode: '4710'
- name: chmod crond (Slackware)
  when: ansible_distribution == "Slackware"
  become: yes
  file:
    path: /usr/sbin/crond
    mode: '0700'
- name: Harden SSH daemon configuration
  become: yes
  template:
    src: "{{ playbook_dir }}/templates/sshd_config-{{ ansible_distribution }}.j2"
    dest: /etc/ssh/sshd_config
    validate: /usr/sbin/sshd -t -f %s
- name: Restart sshd
  when: ansible_distribution == "Debian" or ansible_distribution == "Kali GNU/Linux"
  become: yes
  service:
    name: ssh
    state: restarted
- name: Restart sshd (Slackware)
  when: ansible_distribution == "Slackware"
  become: yes
  command: /bin/sh /etc/rc.d/rc.sshd restart
#- name: Install icmpinfo
#  become: yes
#  when: ansible_distribution == "Debian" or ansible_distribution == "Kali GNU/Linux"
#  apt:
#    name: icmpinfo
#    update_cache: yes
- name: Install icmpinfo (Slackware)
  become: yes
  when: ansible_distribution == "Slackware"
  slackpkg:
    name: icmpinfo
    state: present
- name: Start icmpinfo & logoutd from /etc/rc.d/rc.local (Slackware)
  when: ansible_distribution == "Slackware"
  become: yes
  blockinfile:
    path: /etc/rc.d/rc.local
    block: |
      # Log icmp packets to syslog
      if [ -x /usr/sbin/icmpinfo ]
      then
        echo "Starting ICMP logging:  icmpinfo -v -s -n -p -l"
        /usr/sbin/icmpinfo -v -s -n -p -l
      fi

      # Enforce login time restrictions set in /etc/porttime
      if [ -x /usr/sbin/logoutd -a -f /etc/porttime ]
      then
        echo "Starting logoutd:  /usr/sbin/logoutd"
        /usr/sbin/logoutd
      fi
- name: Create /etc/rc.d/rc.local_shutdown (Slackware)
  become: yes
  when: ansible_distribution == "Slackware"
  copy:
    content: "#!/bin/bash\n"
    dest: /etc/rc.d/rc.local_shutdown
    force: no
    owner: root
    group: root
    mode: '0700'
- name: Stop icmpinfo from /etc/rc.d/rc.local_shutdown (Slackware)
  when: ansible_distribution == "Slackware"
  become: yes
  blockinfile:
    path: /etc/rc.d/rc.local_shutdown
    block: |
      # stop icmpinfo
      if [ -x /usr/sbin/icmpinfo -a -f /var/run/icmpinfo.pid ]
      then
        /usr/sbin/icmpinfo -k
      fi
